<?xml version="1.0"?>
<!--
 | MIT Scratch Preparator for regain search engine
 | Copyright (C) 2012 Come_IN Computerclubs (University of Siegen)
 |
 | This library is free software; you can redistribute it and/or
 | modify it under the terms of the GNU Lesser General Public
 | License as published by the Free Software Foundation; either
 | version 2.1 of the License, or (at your option) any later version.
 |
 | This library is distributed in the hope that it will be useful,
 | but WITHOUT ANY WARRANTY; without even the implied warranty of
 | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 | Lesser General Public License for more details.
 |
 | You should have received a copy of the GNU Lesser General Public
 | License along with this library; if not, write to the Free Software
 | Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 |
 | Contact: Come_IN-Team <come_in-team@listserv.uni-siegen.de>
 +-->
<project name="regain-scratch-preparator" default="targets" basedir=".">

  <!--
   | The properties and paths
   +-->
  <property file="build.properties"/>
  <property environment="env"/>
  <!-- set if java.dir not set in build.properties -->
  <property name="java.dir" value="${env.JAVA_HOME}" />
  <condition property="java_dir_empty">
  	<or>
  		<length string="${java.dir}" length="0" />
  		<equals arg1="${java.dir}" arg2="$${env.JAVA_HOME}" />
  		<not>
  		  <isset property="java.dir" />
  		</not>
  	</or>
  </condition>
  <tstamp>
    <format property="timestamp" pattern="yyMMdd-HHmm"/>
  </tstamp>
  <condition property="version" value="${version.prefix}-PREVIEW">
    <istrue value="${is-preview}"/>
  </condition>
  <condition property="version" value="${version.prefix}-STABLE">
    <isfalse value="${is-preview}"/>
  </condition>
  <property name="version.file" value="${version}"/>
  <property name="programname" value="Java Thumbnailer"/>
  <property name="programname.file" value="javathumbnailer"/>
  <property name="doc.header" value="${programname} ${version} API"/>
  <property name="doc.title" value="API documentation for ${programname} ${version}"/>
  <property name="doc.bottom" value="${programname} ${version}, Copyright (C) 2011 Come_IN Computerclubs (University of Siegen)"/>
  
  <property name="test.reports" value="build/tests" />
  <property name="reportStorage" value="test/reports" />

  <property name="package.file" value="${programname.file}-standalone-${version.file}.jar"/>
  <property name="pluginname.file" value="${programname.file}-crawlerplugin-${version.file}.jar"/>
  <property name="pluginname-taglib.file" value="${programname.file}-plugin-taglib-${version.file}.jar"/>

  <!-- Autodetect the platform -->
  <condition property="platform" value="linux">
    <os family="unix"/>
  </condition>
  <condition property="platform" value="win">
    <os family="windows"/>
  </condition>

  <path id="sourcepath">
    <pathelement location="src"/>
  </path>

  <path id="classpath" cache="true">
    <pathelement location="build/classes"/>
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
  </path>
  <path id="classpath-regain" cache="true">
  	<pathelement location="${regain-location}/build/classes"/>
  	<pathelement location="${regain-location}/build/included-lib-classes/common"/>
  </path>
  <path id="classpath-shared" cache="true">
  </path>

  <!--
   | Display all public targets
   +-->
  <target name="targets">
    <echo message="usage: build [target]"/>
    <echo message=""/>
    <echo message="available targets:"/>
    <echo message="  targets              Shows this list of targets."/>
    <echo message="  dump-info            Dumps some information (VM-Version...)."/>
    <echo message="  clean                Deletes the classes directory."/>
    <echo message="  clean-all            Deletes all generated directories."/>

    <echo message="  prepare              Prepares the compilation. (Extracts the libs)"/>
    <echo message="  prepare-once         Prepares the compilation if needed. (Extracts the libs)"/>

    <echo message="  make                 Compiles the source code."/>
    <echo message="                       (and the regain project, if needed)"/>

    <echo message="  package-plugin       Packages the lib as regain preparator." />

  	<echo message="  deploy-desktop       Installs the regain access controller in regain Desktop." />
  	<echo message="  deploy-crawler       Installs the regain access controller in regain crawler." />
  </target>


  <!--
   | Dump some information.
   +-->
  <target name="dump-info">
    <echo message="java.dir=${java.dir}" />
    <echo message="JAVA_HOME=${env.JAVA_HOME}" />
    <echo message="java.vm.info=${java.vm.info}" />
    <echo message="java.vm.name=${java.vm.name}" />
    <echo message="java.vm.vendor=${java.vm.vendor}" />
    <echo message="java.vm.version=${java.vm.version}" />
    <echo message="os.arch=${os.arch}" />
    <echo message="os.name=${os.name}" />
    <echo message="os.version=${os.version}" />
    <echo message="file.encoding=${file.encoding}" />
    <echo message="user.language=${user.language}" />
  </target>


  <!--
   | Deletes the classes directory.
   +-->
  <target name="clean">
    <delete dir="build/classes"/>
    <delete dir="build/classes-test"/>
  </target>

  <!--
   | Deletes all generated directories.
   +-->
  <target name="clean-all" depends="clean">
    <delete dir="build/included-lib-classes"/>
    <delete dir="build/doc"/>
    <delete dir="build/tests"/>
  </target>

  <!--
   | Prepares the compilation. (Extracts the libs)
   +-->
  <target name="prepare">
    <echo message="Extracting the lib jars ..." />
    <delete dir="build/included-lib-classes"/>
    <mkdir dir="build/included-lib-classes/common"/>
    <unjar dest="build/included-lib-classes/">
      <fileset dir="lib">
        <include name="*.jar"/>
      </fileset>
    </unjar>
  </target>


  <!--
   | Prepares the compilation. (Extracts the libs)
   | Does nothing if the libs were already extracted.
   +-->
  <target name="prepare-once" depends="-check-prepare, -prepare-if-needed"/>
  
  <target name="-check-prepare">
    <condition property="included-lib-classes.missing">
      <not>
        <available file="build/included-lib-classes" type="dir"/>
      </not>
    </condition>
  </target>
  
  <target name="-prepare-if-needed" if="included-lib-classes.missing">
    <antcall target="prepare"/>
  </target>

  <!--
   | Compiles the source code.
   +-->
  <target name="make">
  	<echo message="Making sure everything is prepared at regain ..." />
  	<ant dir="${regain-location}" useNativeBasedir="true" inheritAll="false">
  		<target name="prepare-once"/>
  		<target name="make"/>
  	</ant>
    <echo message="Compiling the source code using ${java.dir} ..." />
    <fail if="java_dir_empty">
  		Neither 'java.dir' nor JAVA_HOME is set, so no compiling is possible. Please copy build.properties.sample to build.properties and edit its values.
  	</fail>
    <mkdir dir="build/classes"/>
    <javac destdir="build/classes"
           debug="${debug}"
           deprecation="true"
           executable="${java.dir}/bin/javac"
           source="1.5"
           target="1.5"
           fork="true"
           includeantruntime="false">
      <compilerarg value="-Xlint"/>
      <src>
        <path refid="sourcepath"/>
      </src>
      <classpath>
        <path refid="classpath"/>
        <path refid="classpath-regain"/>
        <path refid="classpath-shared"/>
      </classpath>
    </javac>
  </target>

   <!--
    | Deploy crawler related changes 
    | Params:
    ${install} - Path to main folder
   -->
   <target name="-deploy-preparator">
   	  <available property="install.available" file="${install}" />
   	  <fail unless="install.available" message="Regain is not yet compiled / ${install} is missing." />
   	  <mkdir dir="${install}/preparator" />
   	  
	  <echo message="Copy preparator(s)..." />
   	  
   	  <copy preservelastmodified="true" todir="${install}/preparator">
   	  	<fileset dir="build/preparator" />
   	  </copy>
   </target>   
   
   <!-- 
    | Install to regain desktop version 
   -->
   <target name="deploy-desktop"> <!-- depends="package-plugin" -->
      <echo message="Deploying desktop version changes ..." /> 
   	  <property name="desktop-install" value="${regain-location}/build/runtime/desktop/${platform}" />

   	  <antcall target="-deploy-preparator">
   	  	<param name="install" value="${desktop-install}" />
   	  </antcall>
   </target>
   
   <target name="deploy-crawler">
     <echo message="Deploying server version changes (Crawler) ..." />
      
   	 <property name="crawler-install" value="${regain-location}/build/runtime/crawler" />
   	  <antcall target="-deploy-preparator">
   	  	<param name="install" value="${crawler-install}" />
   	  </antcall>
   	
   </target>
 
   
   <target name="deploy-server" depends="deploy-crawler">
   </target>

   <target name="deploy" depends="deploy-crawler, deploy-desktop">
   </target>
   
	<target name="package-plugin" depends="preparators">
	</target>

	<target name="package" depends="preparators">
	</target>
   
   <target name="preparators" depends="make, prepare-once">
    <mkdir dir="build/preparator"/>
    <jar jarfile="build/preparator/MITScratchPreparator.jar"
         compress="false" index="true">
      <manifest>
        <attribute name="Preparator-Classes" value="de.uni_siegen.wineme.come_in.preparators.MITScratchPreparator"/>
      </manifest>
      <fileset dir="build/included-lib-classes">
        <include name="edu/mit/scratch/**"/>
        <include name="README"/>
      </fileset>
      <fileset dir="build/classes">
        <include name="de/uni_siegen/wineme/come_in/preparators/MITScratch*"/>
      </fileset>
    </jar>
  </target>
</project>
